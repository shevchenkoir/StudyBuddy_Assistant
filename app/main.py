# # app/main.py
# from pathlib import Path
# import os
# import sys
# import subprocess
# import shutil
# import time

# # --- 1) –ü—É—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ ---
# ROOT = Path(__file__).resolve().parents[1]          # –∫–æ—Ä–µ–Ω—å —Ä–µ–ø–æ
# GUI_APP = ROOT / "gui" / "streamlit_app.py"         # streamlit-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
# CHECKER = ROOT / "check_ollama_connection.py"       # –ø—Ä–æ–≤–µ—Ä–∫–∞ Ollama

# # —á—Ç–æ–±—ã import —Ä–∞–±–æ—Ç–∞–ª –∏–∑ –∫–æ—Ä–Ω—è
# if str(ROOT) not in sys.path:
#     sys.path.insert(0, str(ROOT))


# try:
#     from dotenv import load_dotenv
#     load_dotenv(ROOT / ".env")
# except Exception:
#     pass  # –µ—Å–ª–∏ dotenv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚Äî –ø—Ä–æ—Å—Ç–æ –∏–¥—ë–º –¥–∞–ª—å—à–µ

# def run_checker():
#     """
#     –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ check_ollama_connection.py.
#     –ï—Å–ª–∏ –µ—ë –Ω–µ—Ç, –ø—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ–º —Ñ–∞–π–ª –∫–∞–∫ —Å–∫—Ä–∏–ø—Ç.
#     """
#     if not CHECKER.exists():
#         print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω check_ollama_connection.py ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É Ollama.")
#         return

#     print("üîé –ü—Ä–æ–≤–µ—Ä—è—é Ollama –∏ –º–æ–¥–µ–ª–∏‚Ä¶")
#     try:
#         # –ü–æ–ø—Ä–æ–±—É–µ–º –≤—ã–∑–≤–∞—Ç—å –∫–∞–∫ –º–æ–¥—É–ª—å —Å —Ñ—É–Ω–∫—Ü–∏–µ–π ensure_ollama_ready()
#         import importlib.util
#         spec = importlib.util.spec_from_file_location("ollama_checker", str(CHECKER))
#         mod = importlib.util.module_from_spec(spec)
#         spec.loader.exec_module(mod)  # type: ignore

#         if hasattr(mod, "ensure_ollama_ready"):
#             mod.ensure_ollama_ready()
#         elif hasattr(mod, "main"):
#             mod.main()
#         else:
#             # –§–æ–ª–ª–±–µ–∫ ‚Äî –ø—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å—Ç–∏–º —Å–∫—Ä–∏–ø—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º
#             subprocess.run([sys.executable, str(CHECKER)], check=True)
#     except Exception as e:
#         print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É Ollama: {e}")
#     else:
#         print("‚úÖ Ollama –≥–æ—Ç–æ–≤–∞.")

# def run_streamlit():
#     """
#     –ó–∞–ø—É—Å–∫ Streamlit-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
#     """
#     # –ü—Ä–æ–≤–µ—Ä–∏–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ streamlit
#     streamlit_bin = shutil.which("streamlit")
#     if streamlit_bin is None:
#         # –≤–æ–∑–º–æ–∂–Ω–æ –≤ –≤–∏—Ä—Ç—É–∞–ª–∫–µ: python -m streamlit ...
#         cmd = [sys.executable, "-m", "streamlit", "run", str(GUI_APP)]
#     else:
#         cmd = [streamlit_bin, "run", str(GUI_APP)]

#     # –ü–æ–ª–µ–∑–Ω–æ —è–≤–Ω–æ –ø—Ä–æ–±—Ä–æ—Å–∏—Ç—å –∞–¥—Ä–µ—Å Ollama –∏–∑ .env, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
#     env = os.environ.copy()
#     env.setdefault("OLLAMA_BASE_URL", "http://localhost:11434")

#     print(f"üåê –°—Ç–∞—Ä—Ç—É—é Streamlit: {GUI_APP}")
#     time.sleep(0.2)
#     subprocess.run(cmd, env=env, check=True)

# if __name__ == "__main__":
#     # 1) –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∞–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏–µ Ollama + –º–æ–¥–µ–ª–∏
#     run_checker()
#     # 2) –∑–∞–ø—É—Å–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
#     run_streamlit()
# app/main.py
from pathlib import Path
import os
import sys
import subprocess
import time

# --- –ü—É—Ç–∏ ---
ROOT = Path(__file__).resolve().parents[1]
GUI_APP = ROOT / "gui" / "streamlit_app.py"
CHECKER = ROOT / "check_ollama_connection.py"

# –ò–º–ø–æ—Ä—Ç –∏–∑ –∫–æ—Ä–Ω—è
if str(ROOT) not in sys.path:
    sys.path.insert(0, str(ROOT))

# --- .env ---
try:
    from dotenv import load_dotenv
    load_dotenv(ROOT / ".env")
except Exception:
    pass

def run_checker(no_interactive=True):
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É Ollama –∏ –º–æ–¥–µ–ª–µ–π –∏–∑ check_ollama_connection.py,
    –ø—Ä–∏ —ç—Ç–æ–º –æ—Ç–∫–ª—é—á–∞–µ—Ç –æ—Ç–∫—Ä—ã—Ç–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å `ollama run ...`.
    """
    if not CHECKER.exists():
        print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω check_ollama_connection.py ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É Ollama.")
        return

    print("üîé –ü—Ä–æ–≤–µ—Ä—è—é Ollama –∏ –º–æ–¥–µ–ª–∏‚Ä¶")
    try:
        import importlib.util
        spec = importlib.util.spec_from_file_location("ollama_checker", str(CHECKER))
        mod = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(mod)  # type: ignore

        # –∂–µ—Å—Ç–∫–æ –æ—Ç–∫–ª—é—á–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π run, —á—Ç–æ–±—ã –Ω–µ –ø–ª–æ–¥–∏—Ç—å –æ–∫–Ω–∞
        if no_interactive and hasattr(mod, "AUTO_OPEN_INTERACTIVE_RUN"):
            mod.AUTO_OPEN_INTERACTIVE_RUN = False
        if no_interactive and hasattr(mod, "open_interactive_run"):
            # –ø–µ—Ä–µ—Å—Ç—Ä–∞—Ö–æ–≤–∫–∞: –Ω–∞ —Å–ª—É—á–∞–π –ø—Ä—è–º–æ–≥–æ –≤—ã–∑–æ–≤–∞
            mod.open_interactive_run = lambda *a, **kw: None  # type: ignore

        # –≤—ã–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
        if hasattr(mod, "ensure_ollama_ready"):
            mod.ensure_ollama_ready()   # –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–∞–∫–∞—è
        elif hasattr(mod, "main"):
            mod.main()                  # –∏–Ω–∞—á–µ –æ–±—ã—á–Ω—ã–π main
        else:
            # –§–æ–ª–ª–±–µ–∫: –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–∞–∫ —Å–∫—Ä–∏–ø—Ç –≤ —Ç–æ–º –∂–µ –æ–∫–Ω–µ
            subprocess.run([sys.executable, str(CHECKER)], check=False)
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É Ollama: {e}")
    else:
        print("‚úÖ Ollama –≥–æ—Ç–æ–≤–∞.")

def run_streamlit():
    """
    –ó–∞–ø—É—Å–∫–∞–µ–º Streamlit —á–µ—Ä–µ–∑ python -m streamlit (–±–µ–∑ streamlit.EXE),
    —á—Ç–æ–±—ã –Ω–µ –ª–æ–≤–∏—Ç—å Windows launcher error.
    """
    env = os.environ.copy()
    env.setdefault("OLLAMA_BASE_URL", "http://localhost:11434")
    cmd = [sys.executable, "-m", "streamlit", "run", str(GUI_APP)]

    print(f"üåê –°—Ç–∞—Ä—Ç—É—é Streamlit: {GUI_APP}")
    time.sleep(0.2)
    # check=False ‚Äî —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Å–æ–ª–∏ streamlit, –∞ –Ω–µ –ø–∞–¥–∞—Ç—å –∑–¥–µ—Å—å
    subprocess.run(cmd, env=env, check=False)

if __name__ == "__main__":
    # 1) –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∞–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏–µ Ollama + –º–æ–¥–µ–ª–µ–π (–±–µ–∑ –ª–∏—à–Ω–∏—Ö –æ–∫–æ–Ω)
    run_checker(no_interactive=True)
    # 2) –ó–∞–ø—É—Å–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —ç—Ç–æ–º –∂–µ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ
    run_streamlit()
