# # # app/main.py
# # from pathlib import Path
# # import os
# # import sys
# # import subprocess
# # import shutil
# # import time

# # # --- 1) –ü—É—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ ---
# # ROOT = Path(__file__).resolve().parents[1]          # –∫–æ—Ä–µ–Ω—å —Ä–µ–ø–æ
# # GUI_APP = ROOT / "gui" / "streamlit_app.py"         # streamlit-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
# # CHECKER = ROOT / "check_ollama_connection.py"       # –ø—Ä–æ–≤–µ—Ä–∫–∞ Ollama

# # # —á—Ç–æ–±—ã import —Ä–∞–±–æ—Ç–∞–ª –∏–∑ –∫–æ—Ä–Ω—è
# # if str(ROOT) not in sys.path:
# #     sys.path.insert(0, str(ROOT))


# # try:
# #     from dotenv import load_dotenv
# #     load_dotenv(ROOT / ".env")
# # except Exception:
# #     pass  # –µ—Å–ª–∏ dotenv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚Äî –ø—Ä–æ—Å—Ç–æ –∏–¥—ë–º –¥–∞–ª—å—à–µ

# # def run_checker():
# #     """
# #     –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ check_ollama_connection.py.
# #     –ï—Å–ª–∏ –µ—ë –Ω–µ—Ç, –ø—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ–º —Ñ–∞–π–ª –∫–∞–∫ —Å–∫—Ä–∏–ø—Ç.
# #     """
# #     if not CHECKER.exists():
# #         print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω check_ollama_connection.py ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É Ollama.")
# #         return

# #     print("üîé –ü—Ä–æ–≤–µ—Ä—è—é Ollama –∏ –º–æ–¥–µ–ª–∏‚Ä¶")
# #     try:
# #         # –ü–æ–ø—Ä–æ–±—É–µ–º –≤—ã–∑–≤–∞—Ç—å –∫–∞–∫ –º–æ–¥—É–ª—å —Å —Ñ—É–Ω–∫—Ü–∏–µ–π ensure_ollama_ready()
# #         import importlib.util
# #         spec = importlib.util.spec_from_file_location("ollama_checker", str(CHECKER))
# #         mod = importlib.util.module_from_spec(spec)
# #         spec.loader.exec_module(mod)  # type: ignore

# #         if hasattr(mod, "ensure_ollama_ready"):
# #             mod.ensure_ollama_ready()
# #         elif hasattr(mod, "main"):
# #             mod.main()
# #         else:
# #             # –§–æ–ª–ª–±–µ–∫ ‚Äî –ø—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å—Ç–∏–º —Å–∫—Ä–∏–ø—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º
# #             subprocess.run([sys.executable, str(CHECKER)], check=True)
# #     except Exception as e:
# #         print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É Ollama: {e}")
# #     else:
# #         print("‚úÖ Ollama –≥–æ—Ç–æ–≤–∞.")

# # def run_streamlit():
# #     """
# #     –ó–∞–ø—É—Å–∫ Streamlit-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
# #     """
# #     # –ü—Ä–æ–≤–µ—Ä–∏–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ streamlit
# #     streamlit_bin = shutil.which("streamlit")
# #     if streamlit_bin is None:
# #         # –≤–æ–∑–º–æ–∂–Ω–æ –≤ –≤–∏—Ä—Ç—É–∞–ª–∫–µ: python -m streamlit ...
# #         cmd = [sys.executable, "-m", "streamlit", "run", str(GUI_APP)]
# #     else:
# #         cmd = [streamlit_bin, "run", str(GUI_APP)]

# #     # –ü–æ–ª–µ–∑–Ω–æ —è–≤–Ω–æ –ø—Ä–æ–±—Ä–æ—Å–∏—Ç—å –∞–¥—Ä–µ—Å Ollama –∏–∑ .env, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
# #     env = os.environ.copy()
# #     env.setdefault("OLLAMA_BASE_URL", "http://localhost:11434")

# #     print(f"üåê –°—Ç–∞—Ä—Ç—É—é Streamlit: {GUI_APP}")
# #     time.sleep(0.2)
# #     subprocess.run(cmd, env=env, check=True)

# # if __name__ == "__main__":
# #     # 1) –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∞–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏–µ Ollama + –º–æ–¥–µ–ª–∏
# #     run_checker()
# #     # 2) –∑–∞–ø—É—Å–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
# #     run_streamlit()
# # app/main.py
# from pathlib import Path
# import os
# import sys
# import subprocess
# import time

# # --- –ü—É—Ç–∏ ---
# ROOT = Path(__file__).resolve().parents[1]
# GUI_APP = ROOT / "gui" / "streamlit_app.py"
# CHECKER = ROOT / "check_ollama_connection.py"

# # –ò–º–ø–æ—Ä—Ç –∏–∑ –∫–æ—Ä–Ω—è
# if str(ROOT) not in sys.path:
#     sys.path.insert(0, str(ROOT))

# # --- .env ---
# try:
#     from dotenv import load_dotenv
#     load_dotenv(ROOT / ".env")
# except Exception:
#     pass

# def run_checker(no_interactive=True):
#     """
#     –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É Ollama –∏ –º–æ–¥–µ–ª–µ–π –∏–∑ check_ollama_connection.py,
#     –ø—Ä–∏ —ç—Ç–æ–º –æ—Ç–∫–ª—é—á–∞–µ—Ç –æ—Ç–∫—Ä—ã—Ç–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å `ollama run ...`.
#     """
#     if not CHECKER.exists():
#         print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω check_ollama_connection.py ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É Ollama.")
#         return

#     print("üîé –ü—Ä–æ–≤–µ—Ä—è—é Ollama –∏ –º–æ–¥–µ–ª–∏‚Ä¶")
#     try:
#         import importlib.util
#         spec = importlib.util.spec_from_file_location("ollama_checker", str(CHECKER))
#         mod = importlib.util.module_from_spec(spec)
#         spec.loader.exec_module(mod)  # type: ignore

#         # –∂–µ—Å—Ç–∫–æ –æ—Ç–∫–ª—é—á–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π run, —á—Ç–æ–±—ã –Ω–µ –ø–ª–æ–¥–∏—Ç—å –æ–∫–Ω–∞
#         if no_interactive and hasattr(mod, "AUTO_OPEN_INTERACTIVE_RUN"):
#             mod.AUTO_OPEN_INTERACTIVE_RUN = False
#         if no_interactive and hasattr(mod, "open_interactive_run"):
#             # –ø–µ—Ä–µ—Å—Ç—Ä–∞—Ö–æ–≤–∫–∞: –Ω–∞ —Å–ª—É—á–∞–π –ø—Ä—è–º–æ–≥–æ –≤—ã–∑–æ–≤–∞
#             mod.open_interactive_run = lambda *a, **kw: None  # type: ignore

#         # –≤—ã–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
#         if hasattr(mod, "ensure_ollama_ready"):
#             mod.ensure_ollama_ready()   # –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–∞–∫–∞—è
#         elif hasattr(mod, "main"):
#             mod.main()                  # –∏–Ω–∞—á–µ –æ–±—ã—á–Ω—ã–π main
#         else:
#             # –§–æ–ª–ª–±–µ–∫: –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–∞–∫ —Å–∫—Ä–∏–ø—Ç –≤ —Ç–æ–º –∂–µ –æ–∫–Ω–µ
#             subprocess.run([sys.executable, str(CHECKER)], check=False)
#     except Exception as e:
#         print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É Ollama: {e}")
#     else:
#         print("‚úÖ Ollama –≥–æ—Ç–æ–≤–∞.")

# def run_streamlit():
#     """
#     –ó–∞–ø—É—Å–∫–∞–µ–º Streamlit —á–µ—Ä–µ–∑ python -m streamlit (–±–µ–∑ streamlit.EXE),
#     —á—Ç–æ–±—ã –Ω–µ –ª–æ–≤–∏—Ç—å Windows launcher error.
#     """
#     env = os.environ.copy()
#     env.setdefault("OLLAMA_BASE_URL", "http://localhost:11434")
#     cmd = [sys.executable, "-m", "streamlit", "run", str(GUI_APP)]

#     print(f"üåê –°—Ç–∞—Ä—Ç—É—é Streamlit: {GUI_APP}")
#     time.sleep(0.2)
#     # check=False ‚Äî —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Å–æ–ª–∏ streamlit, –∞ –Ω–µ –ø–∞–¥–∞—Ç—å –∑–¥–µ—Å—å
#     subprocess.run(cmd, env=env, check=False)

# if __name__ == "__main__":
#     # 1) –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∞–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏–µ Ollama + –º–æ–¥–µ–ª–µ–π (–±–µ–∑ –ª–∏—à–Ω–∏—Ö –æ–∫–æ–Ω)
#     run_checker(no_interactive=True)
#     # 2) –ó–∞–ø—É—Å–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —ç—Ç–æ–º –∂–µ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ
#     run_streamlit()



# app/main.py
from pathlib import Path
import os
import sys
import subprocess
import time

# --- –ü—É—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ ---
ROOT = Path(__file__).resolve().parents[1]          # –∫–æ—Ä–µ–Ω—å —Ä–µ–ø–æ: ...\StudyBuddy_Assistant\StudyBuddy_Assistant
GUI_APP = ROOT / "gui" / "streamlit_app.py"         # –æ—Å–Ω–æ–≤–Ω–æ–π Streamlit-—Ñ–∞–π–ª
CHECKER = ROOT / "check_ollama_connection.py"       # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ Ollama

# —á—Ç–æ–±—ã import —Ä–∞–±–æ—Ç–∞–ª –∏–∑ –∫–æ—Ä–Ω—è (config, core, –∏ —Ç.–¥.)
if str(ROOT) not in sys.path:
    sys.path.insert(0, str(ROOT))

# --- .env (–ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏) ---
try:
    from dotenv import load_dotenv  # type: ignore
    load_dotenv(ROOT / ".env")
except Exception:
    pass  # –µ—Å–ª–∏ python-dotenv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚Äî –ø—Ä–æ—Å—Ç–æ –∏–¥—ë–º –¥–∞–ª—å—à–µ

def run_checker(no_interactive: bool = True):
    """
    –ü—ã—Ç–∞–µ—Ç—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É Ollama –∏–∑ check_ollama_connection.py.
    –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º.
    """
    if not CHECKER.exists():
        print("‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω check_ollama_connection.py ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É Ollama.")
        return

    print("üîé –ü—Ä–æ–≤–µ—Ä—è—é Ollama –∏ –º–æ–¥–µ–ª–∏‚Ä¶")
    try:
        import importlib.util
        spec = importlib.util.spec_from_file_location("ollama_checker", str(CHECKER))
        mod = importlib.util.module_from_spec(spec)  # type: ignore
        assert spec.loader is not None
        spec.loader.exec_module(mod)  # type: ignore

        # –û—Ç–∫–ª—é—á–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –æ–∫–Ω–∞, –µ—Å–ª–∏ –º–æ–¥—É–ª—å –∏—Ö –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç
        if no_interactive and hasattr(mod, "AUTO_OPEN_INTERACTIVE_RUN"):
            mod.AUTO_OPEN_INTERACTIVE_RUN = False  # type: ignore
        if no_interactive and hasattr(mod, "open_interactive_run"):
            mod.open_interactive_run = lambda *a, **kw: None  # type: ignore

        if hasattr(mod, "ensure_ollama_ready"):
            mod.ensure_ollama_ready()   # –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å
        elif hasattr(mod, "main"):
            mod.main()                  # –∑–∞–ø–∞—Å–Ω–æ–π –ø—É—Ç—å
        else:
            # –§–æ–ª–ª–±–µ–∫: –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–∞–∫ —Å–∫—Ä–∏–ø—Ç (–≤ —ç—Ç–æ–º –∂–µ –ø—Ä–æ—Ü–µ—Å—Å–µ) –±–µ–∑ –ø–∞–¥–µ–Ω–∏—è –ø—Ä–∏ –æ—à–∏–±–∫–µ
            subprocess.run([sys.executable, str(CHECKER)], check=False)
    except Exception as e:
        print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É Ollama: {e}")
    else:
        print("‚úÖ Ollama –≥–æ—Ç–æ–≤–∞.")

def run_streamlit_inproc():
    """
    –ó–∞–ø—É—Å–∫ Streamlit –≤ –≠–¢–û–ú –ñ–ï –ø—Ä–æ—Ü–µ—Å—Å–µ (–±–µ–∑ subprocess) ‚Äî –Ω–∞–¥—ë–∂–Ω–æ –Ω–∞ Windows,
    –∏–∑–±–µ–≥–∞–µ—Ç PermissionError: [WinError 5].
    """
    if not GUI_APP.exists():
        print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {GUI_APP}")
        print("–ü—Ä–æ–≤–µ—Ä—å –ø—É—Ç—å –∏–ª–∏ –ø–µ—Ä–µ–º–µ—Å—Ç–∏ main.py/GUI-—Ñ–∞–π–ª –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ.")
        raise SystemExit(1)

    # –†–∞–±–æ—Ç–∞–µ–º –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞ (–≤–∞–∂–Ω–æ –¥–ª—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—É—Ç–µ–π –≤ Streamlit)
    os.chdir(str(ROOT))

    # –ë–∞–∑–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è Ollama
    os.environ.setdefault("OLLAMA_BASE_URL", "http://localhost:11434")

    # –ò–º–ø–æ—Ä—Ç CLI Streamlit —Å —É—á—ë—Ç–æ–º –≤–µ—Ä—Å–∏–π
    try:
        from streamlit.web import cli as stcli  # –Ω–æ–≤—ã–µ –≤–µ—Ä—Å–∏–∏
    except Exception:
        import streamlit.web.cli as stcli       # —Å—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏

    # –≠–º—É–ª–∏—Ä—É–µ–º: streamlit run gui/streamlit_app.py
    sys.argv = ["streamlit", "run", str(GUI_APP)]
    print(f"üåê –°—Ç–∞—Ä—Ç—É—é Streamlit (in-proc): {GUI_APP}")
    time.sleep(0.2)
    stcli.main()

def run_streamlit_fallback_subprocess():
    """
    –§–æ–ª–ª–±–µ–∫-—Å–ø–æ—Å–æ–± –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ in-proc –≤–¥—Ä—É–≥ —É–ø–∞–¥—ë—Ç: —á–µ—Ä–µ–∑ subprocess,
    –Ω–æ –≤ –≤–∏–¥–µ –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏ shell=True (–∏–Ω–æ–≥–¥–∞ –ø–æ–º–æ–≥–∞–µ—Ç).
    """
    env = os.environ.copy()
    env.setdefault("OLLAMA_BASE_URL", "http://localhost:11434")
    cmd = f'"{sys.executable}" -m streamlit run "{GUI_APP}"'
    print(f"üåê –ü—Ä–æ–±—É—é —Ñ–æ–ª–ª–±–µ–∫ —á–µ—Ä–µ–∑ subprocess: {cmd}")
    subprocess.run(cmd, env=env, check=False, shell=True)

def run_streamlit():
    """
    –ü—ã—Ç–∞–µ–º—Å—è —Å–Ω–∞—á–∞–ª–∞ in-proc, –ø—Ä–∏ –Ω–µ—É–¥–∞—á–µ ‚Äî —Ñ–æ–ª–ª–±–µ–∫ —á–µ—Ä–µ–∑ subprocess.
    """
    try:
        run_streamlit_inproc()
    except SystemExit:
        # –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º —Ü–µ–ª–µ–≤—ã–µ SystemExit, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏ —Ç.–ø.
        raise
    except Exception as e:
        print(f"‚ö†Ô∏è  In-proc –∑–∞–ø—É—Å–∫ –Ω–µ —É–¥–∞–ª—Å—è: {e}\n   –ü–µ—Ä–µ—Ö–æ–∂—É –Ω–∞ —Ñ–æ–ª–ª–±–µ–∫ subprocess...")
        run_streamlit_fallback_subprocess()

if __name__ == "__main__":
    # 1) –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∞–≤—Ç–æ–ø–æ–¥–Ω—è—Ç–∏–µ Ollama + –º–æ–¥–µ–ª–µ–π (–±–µ–∑ –ª–∏—à–Ω–∏—Ö –æ–∫–æ–Ω)
    run_checker(no_interactive=True)
    # 2) –ó–∞–ø—É—Å–∫ –≤–µ–±‚Äë–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (in-proc; –ø—Ä–∏ –æ—à–∏–±–∫–µ ‚Äî —Ñ–æ–ª–ª–±–µ–∫)
    run_streamlit()
